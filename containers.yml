---
- name: Containers Playbook 
  hosts: docker
  vars_files:
  - group_vars/smtp.yml
  - group_vars/secure/smtp.yml
  - group_vars/gitlab.yml
  - group_vars/secure/gitlab.yml
  tasks:
    - name: registry
      docker:
        name: registry
        image: registry
        pull: always
        state: started
        env:
          STORAGE_PATH: /registry
        ports:
        - "80:5000"
        volumes:
        - "/srv/docker-data/docker-index:/registry"  
    - name: mumble
      docker:
        name: mumble
        image: dcshock/docker-mumble-server
        pull: always
        state: started
        ports:
        - "2222:22"
        - "64738:64738/udp"
        - "64738:64738/tcp"
    - name: mongodb
      docker:
        name: mongodb
        image: mongo:3.0
        pull: always
        state: stopped
        ports:
        - "28017:28017"
        volumes:
        - "/srv/docker-data/mongodb:/data/db"
    - name: redis
      docker:
        name: redis
        image: redis
        pull: always
        state: started
        ports:
        - "6379:6379"
    - name: filepile
      docker:
        name: filepile
        image: docker.codecrusade.org/filepile
        pull: always
        state: started
        registry: docker.codecrusade.org
        insecure_registry: yes
        ports:
        - "3001:3000"
    - name: geopoke
      docker:
        name: geopoke
        image: docker.codecrusade.org/geopoke
        pull: always
        state: started
        registry: docker.codecrusade.org
        insecure_registry: yes
        ports:
        - "3000:3000"
    - name: elasticsearch
      docker:
        name: elasticsearch
        image: docker.codecrusade.org/elasticsearch
        pull: always
        state: started
        registry: docker.codecrusade.org
        insecure_registry: yes
        volumes:
        - "/srv/docker-data/elasticsearch:/elasticsearch-1.4.0/data/elasticsearch"
        ports:
        - "9200:9200"
        - "9300:9300/tcp"
        - "9300:9300/udp"
        - "9400:9400"
    - name: logstash
      docker:
        name: logstash
        image: docker.codecrusade.org/logstash:1.4.2
        state: started
        registry: docker.codecrusade.org
        insecure_registry: yes
        links:
        - "elasticsearch:es"
        ports:
        - "5000:5000"
        - "5228:5228/udp"
        - "5544:5544"
    - name: gitlab
      docker:
        name: gitlab
        image: sameersbn/gitlab:7.9.1
        state: started
        privileged: yes
        env:
          DB_TYPE: "{{db_type}}"
          DB_HOST: "{{db_host}}"
          DB_NAME: "{{db_name}}"
          DB_USER: "{{db_user}}"
          DB_PASS: "{{db_password}}"
          REDIS_HOST: "{{redis_host}}"
          REDIS_PORT: "{{redis_port}}"
          GITLAB_HOST: "{{gitlab_host}}"
          GITLAB_SSH_PORT: "{{gitlab_ssh_port}}"
          GITLAB_PORT: "{{gitlab_web_port}}"
          GITLAB_EMAIL: "{{gitlab_email}}"
          SMTP_DOMAIN: "{{smtp_domain}}"
          SMTP_HOST: "{{smtp_host}}"
          SMTP_PORT: "{{smtp_port}}"
          SMTP_USER: "{{smtp_user}}"
          SMTP_PASS: "{{smtp_password}}"
        volumes:
        - "/srv/docker-data/gitlab:/home/git/data"
        ports:
        - "1022:22"
        - "1080:80"
    - name: minecraft1
      docker:
        name: minecraft1
        image: docker.codecrusade.org/bukkit
        pull: always
        state: started
        registry: docker.codecrusade.org
        insecure_registry: yes
        volumes:
        - "/srv/docker-data/minecraft/world1:/minecraft"
        ports:
        - "25565:25565"
        - "8123:8123"
    - name: minecraft2
      docker:
        name: minecraft2
        image: docker.codecrusade.org/bukkit
        pull: always
        state: stopped
        registry: docker.codecrusade.org
        insecure_registry: yes
        volumes:
        - "/srv/docker-data/minecraft/world2:/minecraft"
        ports:
        - "25566:25565"
        - "8124:8123"
    - name: registry-ui
      docker:
        name: registry-ui
        image: atcol/docker-registry-ui
        pull: always
        state: started
        ports:
        - "7080:8080"
        env:
          REG1: http://docker.codecrusade.org:80/v1/

