---
  - name: Containers Playbook
    hosts: ubuntu-dvr.codecrusade.org
    vars_files:
      - group_vars/smtp.yml
      - group_vars/secure/smtp.yml
      - group_vars/gitlab.yml
      - group_vars/secure/gitlab.yml
    tasks:
      - name: redis
        docker:
          name: redis
          image: redis
          pull: always
          state: started
          ports:
          - "6379:6379"
      - name: mongodb
        docker:
          name: mongodb
          image: mongo:3.0
          pull: always
          state: stopped
          ports:
          - "28017:28017"
          volumes:
          - "/srv/docker-data/mongodb:/data/db"
      - name: haproxy
        docker:
          name: haproxy
          image: haproxy:1.5
          pull: always
          state: started
          expose:
            - 80
            - 443
          ports:
            - "80:80"
            - "443:443"
          volumes:
            - "/srv/docker-data/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg"
            - "/srv/docker-data/haproxy/certs.d:/usr/local/etc/haproxy/certs.d"
      - name: Plex
        docker:
          name: plex
          image: timhaak/plex
          pull: always
          state: started
          net: host
          ports:
            - "32400:32400"
          volumes:
            - "/srv/docker-data/plex/config:/config"
            - "/srv/docker-data/plex/data:/data"
            - "/srv/media/shared/Video:/data/Video"
      - name: gitlab
        docker:
          name: gitlab
          image: sameersbn/gitlab:7.9.1
          state: started
          privileged: yes
          env:
            DB_TYPE: "{{db_type}}"
            DB_HOST: "{{db_host}}"
            DB_NAME: "{{db_name}}"
            DB_USER: "{{db_user}}"
            DB_PASS: "{{db_password}}"
            REDIS_HOST: "{{redis_host}}"
            REDIS_PORT: "{{redis_port}}"
            GITLAB_HOST: "{{gitlab_host}}"
            GITLAB_SSH_PORT: "{{gitlab_ssh_port}}"
            GITLAB_PORT: "{{gitlab_web_port}}"
            GITLAB_EMAIL: "{{gitlab_email}}"
            SMTP_DOMAIN: "{{smtp_domain}}"
            SMTP_HOST: "{{smtp_host}}"
            SMTP_PORT: "{{smtp_port}}"
            SMTP_USER: "{{smtp_user}}"
            SMTP_PASS: "{{smtp_password}}"
          volumes:
            - "/srv/docker-data/gitlab:/home/git/data"
          ports:
            - "1022:22"
            - "1080:80"
      - name: registrator
        docker:
          name: registrator
          image: gliderlabs/registrator
          pull: always
          state: reloaded
          net: host
          command: "consul://{{ansible_default_ipv4.address}}:8500 '-ip {{ansible_default_ipv4.address}}' '-resync 300'"
          volumes:
            - "/var/run/docker.sock:/tmp/docker.sock:ro"

  - name: Containers Playbook
    hosts: docker.codecrusade.org
    tasks:           
      - name: minecraft2
        docker:
          name: minecraft2
          image: docker.codecrusade.org:5000/bukkit
          state: stopped
          insecure_registry: yes
          env:
            SERVICE_TAGS: adults
          volumes:
            - "/mnt/docker-data/minecraft/world2:/minecraft"
          ports:
            - "25566:25565"
            - "8124:8123"
      - name: elasticsearch
        docker:
          name: elasticsearch
          image: elasticsearch:2.3
          state: started
          pull: always
          volumes:
            - "/mnt/docker-data/elasticsearch/config:/usr/share/elasticsearch/config"
            - "/mnt/docker-data/elasticsearch/data:/usr/share/elasticsearch/data"
            - "/mnt/docker-data/elasticsearch/plugins:/usr/share/elasticsearch/plugins"
          ports:
            - "9200:9200"
            - "9300:9300"
      - name: kibana
        docker:
          name: kibana
          image: kibana
          state: started
          links:
            - "elasticsearch:elasticsearch"
          ports:
            - "5601:5601"
      - name: logstash
        docker:
          name: logstash
          image: logstash:2.3
          state: started
          command: logstash -f /config-dir/logstash.conf
          volumes:
            - "/mnt/docker-data/logstash:/config-dir"
         # links:
         # - "elasticsearch:es"
          ports:
            - "5001:5001"
            - "5544:5544"
            - "5044:5044"
            - "5228:5228/udp"
